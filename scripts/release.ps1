# HSGUI Release Script for PowerShell
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ª–∏–∑–æ–≤

param(
    [Parameter(Position=0)]
    [ValidateSet("win", "windows", "linux", "mac", "macos", "all")]
    [string]$Platform = "all"
)

Write-Host "üöÄ HSGUI Release Script" -ForegroundColor Green
Write-Host "========================" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if (-not (Test-Path "package.json")) {
    Write-Host "‚ùå –û—à–∏–±–∫–∞: package.json –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞." -ForegroundColor Red
    exit 1
}

# –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ package.json
try {
    $packageJson = Get-Content "package.json" | ConvertFrom-Json
    $version = $packageJson.version
    Write-Host "üì¶ –í–µ—Ä—Å–∏—è: $version" -ForegroundColor Cyan
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ package.json" -ForegroundColor Red
    exit 1
}

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É dist –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
if (-not (Test-Path "dist")) {
    New-Item -ItemType Directory -Path "dist" | Out-Null
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ª–∏–∑–∞
function Create-Release {
    param(
        [string]$PlatformName,
        [string]$ScriptName
    )
    
    Write-Host "üî® –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ –¥–ª—è $PlatformName..." -ForegroundColor Yellow
    
    try {
        npm run $ScriptName
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ $PlatformName —Ä–µ–ª–∏–∑ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
            return $true
        } else {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ $PlatformName —Ä–µ–ª–∏–∑–∞" -ForegroundColor Red
            return $false
        }
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ $PlatformName —Ä–µ–ª–∏–∑–∞: $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
}

# –°–æ–∑–¥–∞–µ–º —Ä–µ–ª–∏–∑—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
switch ($Platform) {
    { $_ -in @("win", "windows") } {
        if (-not (Create-Release "Windows" "release:win")) { exit 1 }
    }
    "linux" {
        if (-not (Create-Release "Linux" "release:linux")) { exit 1 }
    }
    { $_ -in @("mac", "macos") } {
        if (-not (Create-Release "macOS" "release:mac")) { exit 1 }
    }
    "all" {
        Write-Host "üåç –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–æ–≤ –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º..." -ForegroundColor Cyan
        $success = $true
        $success = $success -and (Create-Release "Windows" "release:win")
        $success = $success -and (Create-Release "Linux" "release:linux")
        $success = $success -and (Create-Release "macOS" "release:mac")
        
        if (-not $success) {
            Write-Host "‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–ª–∏–∑—ã –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å" -ForegroundColor Red
            exit 1
        }
    }
}

Write-Host ""
Write-Host "üéâ –ì–æ—Ç–æ–≤–æ! –†–µ–ª–∏–∑—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø–∞–ø–∫–µ dist/" -ForegroundColor Green
Write-Host "üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ dist/:" -ForegroundColor Cyan
Get-ChildItem "dist" | Format-Table Name, Length, LastWriteTime

Write-Host ""
Write-Host "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Yellow
Write-Host "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ dist/" -ForegroundColor White
Write-Host "2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ä–µ–ª–∏–∑—ã –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö" -ForegroundColor White
Write-Host "3. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ä–µ–ª–∏–∑—ã –≤ GitHub Releases" -ForegroundColor White
Write-Host "4. –û–±–Ω–æ–≤–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é" -ForegroundColor White
